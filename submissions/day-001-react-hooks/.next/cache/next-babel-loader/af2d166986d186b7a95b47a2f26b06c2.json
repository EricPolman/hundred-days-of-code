{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ericpolman/git/pp/hundred-days-of-code/submissions/day-001-react-hooks/src/image-change-on-scroll.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\n\nvar ImageChangeOnScroll = function ImageChangeOnScroll(_ref) {\n  var primaryImg = _ref.primaryImg,\n      secondaryImg = _ref.secondaryImg;\n  var imageRef = useRef(null);\n\n  var _useState = useState(false),\n      inView = _useState[0],\n      setInView = _useState[1];\n\n  useEffect(function () {\n    setInView(isInView());\n    window.addEventListener(\"scroll\", scrollHandler);\n    return function () {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n\n  var isInView = function isInView() {\n    if (imageRef.current) {\n      var rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  var scrollHandler = function scrollHandler() {\n    return setInView(isInView);\n  };\n\n  return __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default ImageChangeOnScroll;","map":{"version":3,"sources":["/Users/ericpolman/git/pp/hundred-days-of-code/submissions/day-001-react-hooks/src/image-change-on-scroll.tsx"],"names":["React","useRef","useEffect","useState","ImageChangeOnScroll","primaryImg","secondaryImg","imageRef","inView","setInView","isInView","window","addEventListener","scrollHandler","removeEventListener","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAOA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAGF;AAAA,MAFxBC,UAEwB,QAFxBA,UAEwB;AAAA,MADxBC,YACwB,QADxBA,YACwB;AACxB,MAAMC,QAAQ,GAAGN,MAAM,CAAmB,IAAnB,CAAvB;;AADwB,kBAEIE,QAAQ,CAAC,KAAD,CAFZ;AAAA,MAEjBK,MAFiB;AAAA,MAETC,SAFS;;AAIxBP,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS,CAACC,QAAQ,EAAT,CAAT;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAO,YAAM;AACXF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACD,KAFD;AAGD,GANQ,CAAT;;AAQA,MAAMH,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIH,QAAQ,CAACQ,OAAb,EAAsB;AACpB,UAAMC,IAAI,GAAGT,QAAQ,CAACQ,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeR,MAAM,CAACS,WAA9C;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,MAAMP,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMJ,SAAS,CAACC,QAAD,CAAf;AAAA,GAAtB;;AAEA,SAAO;AAAK,IAAA,GAAG,EAAEF,MAAM,GAAGF,YAAH,GAAkBD,UAAlC;AAA8C,IAAA,GAAG,EAAC,EAAlD;AAAqD,IAAA,GAAG,EAAEE,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1BD;;AA4BA,eAAeH,mBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\ntype Props = {\n  primaryImg: string;\n  secondaryImg: string;\n};\n\nconst ImageChangeOnScroll = ({\n  primaryImg,\n  secondaryImg,\n}: Props): JSX.Element => {\n  const imageRef = useRef<HTMLImageElement>(null);\n  const [inView, setInView] = useState(false);\n\n  useEffect(() => {\n    setInView(isInView());\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n    return false;\n  };\n\n  const scrollHandler = () => setInView(isInView);\n\n  return <img src={inView ? secondaryImg : primaryImg} alt=\"\" ref={imageRef} />;\n};\n\nexport default ImageChangeOnScroll;\n"]},"metadata":{},"sourceType":"module"}